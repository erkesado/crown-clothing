{"version":3,"file":"static/js/775.170f11b3.chunk.js","mappings":"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","sources":["components/checkout-item/checkout-item.styles.tsx","components/checkout-item/checkout-item.component.tsx","routes/checkout/checkout.styles.tsx","routes/checkout/checkout.component.tsx","store/cart/cart.selector.ts","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const Cell = styled.span`\n  width: 23%;\n`;\n\nexport const Quantity = styled(Cell)`\n  display: flex;\n`;\n\nexport const Arrow = styled.div`\n  cursor: pointer;\n`;\n\nexport const Value = styled.span`\n  margin: 0 10px;\n`;\n\nexport const RemoveButton = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n","import { FC, memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectCartItems } from \"../../store/cart/cart.selector\";\nimport { CartItem } from \"../../store/cart/cart.types\";\nimport {\n  addItemToCart,\n  removeItemFromCart,\n  clearItemFromCart,\n} from \"../../store/cart/cart.action\";\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  Cell,\n  Quantity,\n  Arrow,\n  Value,\n  RemoveButton,\n} from \"./checkout-item.styles\";\n\ntype CheckoutItemProps = {\n  item: CartItem;\n}\n\nconst CheckoutItem: FC<CheckoutItemProps> = memo(({ item }) => {\n  const { name, imageUrl, price, quantity } = item;\n\n  const cartItems = useSelector(selectCartItems);\n  const dispatch = useDispatch();\n\n  const addItemHandler = () => dispatch(addItemToCart(cartItems, item));\n  const removeItemHandler = () => dispatch(removeItemFromCart(cartItems, item));\n  const clearItemHandler = () => dispatch(clearItemFromCart(cartItems, item));\n\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt={`${name}`} />\n      </ImageContainer>\n      <Cell>{name}</Cell>\n      <Quantity>\n        <Arrow onClick={removeItemHandler}>&#10094;</Arrow>\n        <Value className=\"value\">{quantity}</Value>\n        <Arrow className=\"arrow\" onClick={addItemHandler}>\n          &#10095;\n        </Arrow>\n      </Quantity>\n      <Cell>{price}</Cell>\n      <RemoveButton onClick={clearItemHandler}>&#10005;</RemoveButton>\n    </CheckoutItemContainer>\n  );\n});\n\nexport default CheckoutItem;\n","import styled from \"styled-components\";\n\nexport const CheckoutContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n`;\n\nexport const CheckoutHeader = styled.div`\n  width: 100%;\n  padding: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlock = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n`;\n\nexport const Total = styled.span`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n","import { useSelector } from \"react-redux\";\n\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from \"../../store/cart/cart.selector\";\n\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\n\nimport {\n  CheckoutContainer,\n  CheckoutHeader,\n  HeaderBlock,\n  Total,\n} from \"./checkout.styles\";\n\nconst Checkout = () => {\n  const cartItems = useSelector(selectCartItems);\n  const cartTotal = useSelector(selectCartTotal);\n\n  return (\n    <CheckoutContainer>\n      <CheckoutHeader>\n        <HeaderBlock>\n          <span>Product</span>\n        </HeaderBlock>\n        <HeaderBlock>\n          <span>Description</span>\n        </HeaderBlock>\n        <HeaderBlock>\n          <span>Quantity</span>\n        </HeaderBlock>\n        <HeaderBlock>\n          <span>Price</span>\n        </HeaderBlock>\n        <HeaderBlock>\n          <span>Remove</span>\n        </HeaderBlock>\n      </CheckoutHeader>\n      {cartItems.map((item) => (\n        <CheckoutItem key={`checkout-item-${item.id}`} item={item} />\n      ))}\n      <Total>Total: ${cartTotal}</Total>\n    </CheckoutContainer>\n  );\n};\n\nexport default Checkout;\n","import { createSelector } from \"reselect\";\n\nimport { RootState } from \"../store\";\n\nimport { CartState } from \"./cart.reducer\";\n\nconst selectCartReducer = (state: RootState): CartState => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCartReducer],\n  (cart) => cart.cartItems\n);\n\nexport const selectIsCartOpen = createSelector(\n  [selectCartReducer],\n  (cart) => cart.isCartOpen\n);\n\nexport const selectCartCount = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce((count, item) => count + item.quantity, 0)\n);\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce((total, item) => total + item.quantity * item.price, 0)\n);\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["CheckoutItemContainer","styled","div","_templateObject","_taggedTemplateLiteral","ImageContainer","_templateObject2","Cell","span","_templateObject3","Quantity","_templateObject4","Arrow","_templateObject5","Value","_templateObject6","RemoveButton","_templateObject7","memo","_ref","item","name","imageUrl","price","quantity","cartItems","useSelector","selectCartItems","dispatch","useDispatch","_jsxs","children","_jsx","src","alt","concat","onClick","removeItemHandler","removeItemFromCart","className","addItemHandler","addItemToCart","clearItemHandler","clearItemFromCart","CheckoutContainer","CheckoutHeader","HeaderBlock","Total","Checkout","cartTotal","selectCartTotal","map","CheckoutItem","id","selectCartReducer","state","cart","createSelector","selectIsCartOpen","isCartOpen","selectCartCount","reduce","count","total","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","join","getDependencies","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}